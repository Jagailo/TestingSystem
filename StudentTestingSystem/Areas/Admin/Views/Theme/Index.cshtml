@model StudentTestingSystem.Areas.Admin.Models.Theme.ThemeIndexViewModel
@using StudentTestingSystem.Helpers
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Partial("_Breadcrumb", Model.Breadcrumb)

@if (!Model.Themes.Any())
{
    <div class="row">
        <div class="col-md-12">
            <div class="card ">
                <div class="card-header ">
                    <h5 class="card-title">@ViewBag.Title</h5>
                </div>
                <div class="card-body ">
                    <div class="alert alert-warning" role="alert">There are no themes on this subject.</div>
                    @if (this.User.IsInRole("Admin"))
                    {
                        @Html.ActionLink("Add a new theme", "Create", new { subjectId = Model.SubjectId }, new { @class = "btn btn-success" })
                    }
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col-md-12">
            <div class="card ">
                <div class="card-header ">
                    <h5 class="card-title">@ViewBag.Title</h5>
                </div>
                <div class="card-body ">
                    @if (this.User.IsInRole("Admin"))
                    {
                        @Html.ActionLink("Add a new theme", "Create", new { subjectId = Model.SubjectId }, new { @class = "btn btn-success" })
                    }
                    <div class="table-responsive">
                        <table class="table">
                            <thead class=" text-primary">
                                <th class="text-center">Theme</th>
                                <th class="text-center">Time to pass</th>
                                <th class="text-center">Questions</th>
                                <th class="text-center">Actions</th>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Themes)
                                {
                                    <tr>
                                        <td>@Html.ActionLink(item.Title, "Index", "Question", new { themeId = item.Id }, null)</td>
                                        <td class="text-center">@Html.DisplayFor(modelItem => item.TimeLine) minutes</td>
                                        <td class="text-center">@Html.DisplayFor(modelItem => item.QuestionsCount)</td>
                                        <td class="text-center">
                                            @if (this.User.IsInRole("Admin"))
                                            {
                                                @Html.ActionLink("Results", "ThemeAllResults", "Result", new { themeId = item.Id }, new { @class = "btn btn-success" })
                                            }
                                            @if (item.QuestionsCount != 0 && this.User.IsInRole("Admin"))
                                            {
                                                @Html.ActionLink("Solve as student", "CreateSession", "Result", new { Area = "Student", subjectId = item.SubjectId, themeId = item.Id, onclick = "startTick();" }, new { @class = "btn btn-warning" })
                                            }
                                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-primary" })
                                            <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#deleteModal" data-item-id="@item.Id" data-item-description="@item.Title">Delete</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div id="paginationFooter" class="card-footer ">
                    <hr>
                    <div class="stats">
                        @Html.PageLinks(Model.PageInfo, x => Url.Action("Index", new { subjectId = Model.SubjectId, page = x }))
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm delete</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">Are you sure you want to delete: <span class="description-item"></span></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <input type="submit" value="Delete" class="btn btn-danger btn-ok" />
                </div>
            </div>
        </div>
    </div>

    <script>
    $('#deleteModal').on('click', '.btn-ok', function (e) {
        $.post('/Admin/Theme/Delete/' + $(this).data('itemId')).then(function () {
            window.location.href = '@Url.Action("Index", "Theme", new { subjectId = Model.SubjectId })';
        });
    });

    $('#deleteModal').on('show.bs.modal', function (e) {
        var data = $(e.relatedTarget).data();
        $('.description-item', this).text(data.itemDescription);
        $('.btn-ok', this).data('itemId', data.itemId);
    });
    </script>
}

<script>
    $("#subjectMenuItem").addClass("active");
</script>